/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bean;

import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.HashMap;
import javax.swing.JTable;
import javax.swing.table.TableColumn;
import jpkj.*;

/**
 *
 * @author sat
 */
public class DefaultTable extends javax.swing.JPanel {

    private ActionListener onclickEdit = null;
    String sql;

    public void setEnableListener(ActionListener ac) {
        this.onclickEdit = ac;
    }

    public void editEnable(boolean value) {
        jButton2.setEnabled(value);
    }

    /**
     * Creates new form DefaultTable
     */
    public DefaultTable() {
        initComponents();
        editEnable(false);
    }

    public void setSql(String sql) {
        this.sql = sql;
        update();
    }

    public void update() {
        Swing.lookTable(jTable1);
        Bd.setSqlTable(jTable1, this.sql);
        if (jTable1.getRowCount() > 0) {
            jTable1.setRowSelectionInterval(0, 0);
        }
    }

    public String getSelected(int index) {
        return Swing.getSelect(jTable1, index);
    }

    public JTable getTable() {
        return this.jTable1;
    }

    public HashMap<String,String> getLine() {
        HashMap<String,String> linha = new HashMap<String,String>();
        Enumeration<TableColumn> tmpColunas = jTable1.getColumnModel().getColumns();        
        int c = 0;
        while (tmpColunas.hasMoreElements()) {
            TableColumn nextElement = tmpColunas.nextElement();
            String select = Swing.getSelect(jTable1, c);
            c++;
            linha.put(nextElement.getHeaderValue().toString(), select);
        }
        return linha;
    }

    public void setTable(JTable table) {
        this.jTable1 = table;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Remover Selecionado");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Editar Selecionado");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 37, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            ResultSet rs = Bd.ret(sql);
            ResultSetMetaData metaData = rs.getMetaData();
            String tableName = metaData.getTableName(1);
            boolean idExists = false;
            for (int i = 1; i <= metaData.getColumnCount(); i++) {
                if (metaData.getColumnName(i).equalsIgnoreCase("id")) {
                    idExists = true;
                }
            }
            if (!idExists) {
                Msg.show("A tabela " + tableName + " não pode remover");
            } else {
                String id = "";
                if (jTable1.getSelectedRowCount() < 1) {
                    Msg.show("Selecione uma linha para remover");
                    return;
                }
                for (int i = 0; i < jTable1.getColumnCount(); i++) {
                    if (jTable1.getColumnName(i).equalsIgnoreCase("id")) {
                        id = getSelected(i);
                    }
                }
                if (id.isEmpty()) {
                    Msg.show("Não existe campo identificador");
                    return;
                }
                String resposta = Entry.BTN("Deseja remover o registro " + id + " ? ", new String[]{"Sim", "Não"});
                if (resposta.equalsIgnoreCase("Sim")) {
                    Bd.exec("BEGIN");
                    Bd.exec("delete from " + tableName + " where id='" + id + "'");
                    Bd.exec("COMMIT");
                    this.update();
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed

    }//GEN-LAST:event_jTable1KeyPressed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        System.out.println(evt.getKeyCode());
    }//GEN-LAST:event_formKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.onclickEdit.actionPerformed(evt);
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
